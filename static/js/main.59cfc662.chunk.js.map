{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","api/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.js","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSucsess","unFollowSucsess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","onClick","p","e","key","selectedPage","User","user","src","photos","small","userPhoto","styles","disabled","some","Users","props","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","Preloader","React","Component","connect","bind","page","totalCount","Header","header","alt","loginBlock","HeaderContainer","maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","Field","component","Input","validate","required","placeholder","formSummaryError","length","stopSubmit","_error","formData","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","value","maxLength","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.59cfc662.chunk.js","sourcesContent":["\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1xP1n\",\"preloader\":\"users_preloader__3_l-F\"};","module.exports = __webpack_public_path__ + \"static/media/user.5172ccf5.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.2921ebf6.svg\";","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"daa17023-28f4-4f43-8b5f-aeef7f6cf334\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status/`, {status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post('auth/login', {email, password, rememberMe});\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__KEKO0\",\"item\":\"Navbar_item__3qlem\",\"activeLink\":\"Navbar_activeLink__3N5ow\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 25,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSucsess = (userId) => ({type: FOLLOW, userId})\r\nexport const unFollowSucsess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setCurrentPage(page));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSucsess)\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unFollowSucsess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n//window.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, onPageChanged, currentPage, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber((portionNumber - 1))\r\n            }}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span onClick={(e) => {\r\n                        onPageChanged(p)\r\n                    }} key={p}\r\n                                 className={currentPage === p && s.selectedPage}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber((portionNumber + 1))}}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;\r\n\r\n\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,(users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' alt='logo'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>logout</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div><Field component={Input} validate={[required, maxLength30]} name={'email'} placeholder={'email'}/></div>\r\n                <div><Field component={Input} validate={[required, maxLength30]} name={'password'} type={'password'} placeholder={'password'}/></div>\r\n                <div><Field component={Input} name={'rememberMe'} type={'checkbox'}/> remember me</div>\r\n                {error && <div className={s.formSummaryError}>{error}</div>}\r\n                <div><button>Login</button></div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n}) (LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n\r\n    return (props) => {\r\n        return (\r\n            <React.Suspense fallback={<Preloader/>}>\r\n                <Component {...props}/>\r\n            </React.Suspense>\r\n        )\r\n    };\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from './components/Users/UsersContainer';\n\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n//React lazy Ленивая загрузка\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import ('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}/>\n\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)}/>\n\n                    <Route path='/users'\n                           render={withSuspense(UsersContainer)}/>\n                    <Route path='/login'\n                           render={() => <Login/>}/>\n                </div>\n            </div>\n        )\n\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\nexport default SamuraiJSApp;\n\n\n\n\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(\n            <SamuraiJSApp />, document.getElementById('root'));\n\n\n\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <img className='preloader' src={preloader} alt='preloader' />\r\n    )\r\n}\r\nexport default Preloader","export const required = value => {\r\n    if (value) {\r\n        return undefined;\r\n    } else {\r\n        return 'Field is required';\r\n    }\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    }\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__35WJU\",\"error\":\"FormsControls_error__Q2lP9\",\"formSummaryError\":\"FormsControls_formSummaryError__2377H\"};","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><textarea {...input} {...restProps}></textarea></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><input {...input} {...restProps}></input></FormControl>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2_SQJ\",\"pagination\":\"Paginator_pagination__1TCWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ED1E\",\"loginBlock\":\"Header_loginBlock__2733Z\"};","import {profileAPI,  usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    //debugger;\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}